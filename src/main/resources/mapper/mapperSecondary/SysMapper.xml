<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iszion.api.sys.dao.SysDAO">

    <!--    즐겨찾기 저장 -->
    <insert id="fav_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            INSERT INTO XMFAVTB    (
            USER_ID
            ,LOCATION
            ,SEQ
            ,MENU_ID
            ,MENU_PARENT
            ,PROG_NM
            ,PROG_ID
            ,ICON
            ,STATE_OPENED
            ,TYPE
            ,REG_DATE
            ,REG_ID
            ,UPDATE_DATE
            ,UPDATE_ID
            ) VALUES (
            #{item.userId }
            ,#{item.location }
            ,(select IFNULL(max(a1.seq),0) + 1 from XMFAVTB a1 where a1.user_id = #{item.userId }  )
            ,(select concat(substring_index(a2.menu_id,"_", 1), "_", max(substring_index(a2.menu_id,"_", -1)) + 1) from XMFAVTB a2 where a2.user_id = #{item.userId }  )
            ,(select min(a3.menu_id) from XMFAVTB a3 where a3.user_id = #{item.userId }  )
            ,#{item.progNm }
            ,#{item.progId }
            ,#{item.icon }
            ,'0'
            ,#{item.type }
            ,NOW()
            ,#{userId}
            ,NOW()
            ,#{userId}
            )
        </foreach>
    </insert>


    <!--    메뉴 그룹>항목정보 list -->
    <select id="menu_sub_list" resultType="java.util.HashMap">
        SELECT
               a.SEQ                                as      id
             , a.MENU_PARENT                        as      menuParent
             , a.MENU_ID                            as      menuId
             , CONCAT('sub_menu_', a.PROG_ID)       as      labelExt
             , a.PROG_NM                            as      label
             , a.PROG_ID                            as      progId
             , a.ICON                               as      icon
             , a.TYPE                               as      header
             , CONCAT('/main/', LOWER(a.PROG_ID))   as      url
             , CASE
                 WHEN da.PROG_ID is null AND db.PROG_ID is null AND du.PROG_ID is null    THEN 'N'
                 ELSE 'Y'
                END    as      docYn
        FROM db_b0main.XMENUTB a
             left join db_b0main.XDOCATB da ON da.PROG_ID = a.PROG_ID
             left join XDOCBTB db ON db.PROG_ID = a.PROG_ID
             left join XDOCUTB du ON db.PROG_ID = a.PROG_ID
             left join db_b0main.XGRNTPTB gp ON gp.COMP_CD = #{paramCompCd}  AND gp.PROG_ID = a.PROG_ID  AND gp.USER_ID = #{paramUserId}
        WHERE 1=1
          AND a.LOCATION    =   #{ paramGroupCd }
          AND (#{paramUserId} = 'admin' OR (gp.SCR_YN = 'Y' OR a.MENU_PARENT = '#'))
        ORDER BY a.SEQ
    </select>


    <!--    언어정보 list -->
    <select id="lang_list" resultType="java.util.HashMap">
        SELECT
               LABEL_ID
             , LABEL_NM
        FROM XLANGTB
        WHERE 1=1
          AND ID = #{paramId}
    </select>


    <!--    메뉴 즐겨찾기 list -->
    <select id="menu_fav_list" resultType="java.util.HashMap">
        SELECT
               SEQ                                 as      id
             , MENU_PARENT                         as      menuParent
             , MENU_ID                             as      menuId
             , CONCAT('sub_menu_', PROG_ID)        as      labelExt
             , PROG_NM                             as      label
             , PROG_ID                             as      progId
             , ICON                                as      icon
             , TYPE                                as      header
             , CONCAT('/main/', LOWER(PROG_ID))    as       url
        FROM XMFAVTB
        WHERE 1=1
          AND USER_ID = #{ paramUserId }
    </select>

    <!--    게시판 list -->
    <select id="noticeBoard_list" resultType="java.util.HashMap">
        SELECT
               CONCAT(@rownum := @rownum+1) as  seq
             , a.DEPT_CD            as  deptCd
             , c.COMM_NM            as  deptNm
             , a.BOARD_NO           as  boardNo
             , a.USER_ID            as  userId
             , a.USER_NM            as  userNm
             , a.TITLE              as  title
             , a.CONTENTS           as  contents
             , a.VIEW_CNT           as  viewCnt
             , DATE_FORMAT(a.MAKE_DATE, '%Y-%m-%d %H:%i:%s') as makeDate
        FROM XBORDTB a
            left outer join db_b0main.XCOMMTB as c ON c.COMM_CD = a.DEPT_CD
            , (SELECT @rownum :=0) AS tmp
        where a.DEPT_CD = #{ paramDeptCd }
        <if test='paramSearchValue != null and paramSearchValue != ""'>
            AND ${paramSearchFg }  LIKE CONCAT( '%', #{paramSearchValue }, '%' )
        </if>
        ORDER by a.BOARD_NO desc
    </select>

    <select id="noticeBoard_select" resultType="java.util.HashMap">
        SELECT
               b.dept_cd                    as  deptCd
             , c.comm_nm                    as  deptNm
             , b.board_no                   as  boardNo
             , b.user_id                    as  userId
             , b.user_nm                    as  userNm
             , b.title                      as  title
             , b.contents                   as  contents
             , b.view_cnt                   as  viewCnt
             , DATE_FORMAT(b.MAKE_DATE, '%Y-%m-%d %H:%i:%s') as makeDate
        FROM   XBORDTB b
           -- 부서
           left outer join db_b0main.XCOMMTB as c ON c.COMM_CD = b.dept_cd

        WHERE b.DEPT_CD = #{paramDeptCd } AND b.BOARD_NO = #{paramBoardNo }
    </select>

    <update id="noticeBoard_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            UPDATE XBORDTB
            SET
                  TITLE             = #{item.title }
                , CONTENTS          = #{item.contents }
                , MAKE_DATE         = now()

            WHERE DEPT_CD           = #{item.deptCd }
              AND BOARD_NO          = #{item.boardNo }
        </foreach>
    </update>

    <delete id="noticeBoard_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            DELETE FROM XBORDTB
            WHERE DEPT_CD          =  #{item.deptCd }
              AND BOARD_NO         =  #{item.boardNo }
        </foreach>
    </delete>

    <insert id="noticeBoard_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            INSERT INTO XBORDTB  (
                      DEPT_CD
                    , BOARD_NO
                    , USER_ID
                    , USER_NM
                    , TITLE
                    , CONTENTS
                    , VIEW_CNT
                    , MAKE_DATE
            ) VALUES (
                      #{item.deptCd }
                    , ( select ifnull(max(b.BOARD_NO) + 1, 1) from XBORDTB b where b.DEPT_CD = #{item.deptCd } )
                    , #{item.userId }
                    , #{item.userNm }
                    , #{item.title }
                    , #{item.contents }
                    , 0
                    , now()
                    )
        </foreach>
    </insert>

    <!--    이벤트 list -->
    <select id="event_list" resultType="java.util.HashMap">
        SELECT
               a.USER_ID            as  userId
             , a.REG_DAY            as  regDay
             , a.REG_DAY            as  oldRegDay
             , a.CONTENTS           as  contents
             , a.TYPE               as  type
        FROM XEVENTTB a
        where USER_ID   = #{paramUserId}
          AND SUBSTRING(REG_DAY,5,2) = #{paramMonth}
    </select>

    <update id="event_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            UPDATE XEVENTTB
            SET
                  REG_DAY           =   #{item.regDay }
                , CONTENTS          =   #{item.contents }
                , TYPE              =   #{item.type }

            WHERE USER_ID           =   #{item.userId }
              AND REG_DAY           =   #{item.oldRegDay }
        </foreach>
    </update>

    <delete id="event_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            DELETE FROM XEVENTTB
            WHERE USER_ID           =   #{item.userId }
              AND REG_DAY           =   #{item.oldRegDay }
        </foreach>
    </delete>

    <insert id="event_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";" open="" close="">
            INSERT INTO XEVENTTB  (
                      USER_ID
                    , REG_DAY
                    , CONTENTS
                    , TYPE
            ) VALUES (
                      #{item.userId }
                    , #{item.regDay }
                    , #{item.contents }
                    , #{item.type }
                    )
        </foreach>
    </insert>



    <!--    사용자 권한주기 list    -->
    <select id="sys1110_grntg_list" resultType="java.util.HashMap">
        SELECT
              u.USER_ID         		as  userId
            , u.USER_NM         		as  userNm
            , u.EMP_CD          		as  empCd
            , u.DEPT_CD         		as  deptCd
            , c1.COMM_NM         		as  deptNm
            , u.PSTN_CD  	     		as  patnCd
            , c2.COMM_NM  	     		as  patnNm
            , g.LEVEL_CD		 		as	levelCd
            , c3.comm_nm				as	levelNm
            , IFNULL(g.GN_MKT,'N')		as	gnMkt
            , IFNULL(g.GN_AUX,'N')		as	gnAux
            , IFNULL(g.GN_MST,'N')		as	gnMst
            , IFNULL(g.GN_SYS,'N')		as	gnSys
            , IFNULL(g.GN_COM,'N')		as	gnCom
            , IFNULL(g.GN_FEE,'N')		as	gnFee
            , IFNULL(g.GN_SAL,'N')		as	gnSal
            , IFNULL(g.GN_COS,'N')		as	gnCos
            , IF(g.USER_ID is null, 'I', 'U')  as  iuD
        FROM XUSERTB u
            left join XGRNTGTB g  ON g.USER_ID  = u.USER_ID
            left join db_b0main.XCOMMTB  c1 ON c1.comm_cd = u.DEPT_CD
            left join db_b0main.XCOMMTB  c2 ON c2.comm_cd = u.PSTN_CD
            left join db_b0main.XCOMMTB  c3 ON c3.comm_cd = g.LEVEL_CD
        WHERE u.USER_ID != 'admin'
          AND u.USE_YN = 'Y'
            <if test='paramDeptCd != null and paramDeptCd != ""'>
                AND u.DEPT_CD = #{paramDeptCd}
            </if>
            <if test='paramSearchValue != null and paramSearchValue != ""'>
                AND (u.EMP_CD LIKE CONCAT('%', #{paramSearchValue}, '%') OR u.USER_NM LIKE CONCAT('%', #{paramSearchValue}, '%'))
            </if>
        ORDER by u.DEPT_CD asc, u.PSTN_CD asc
    </select>

    <!--    사용자 권한주기 신규등록  -->
    <insert id="sys1110_grntg_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XGRNTGTB
            (
              USER_ID
            , LEVEL_CD
            , GN_COM
            , GN_SYS
            , GN_MST
            , GN_AUX
            , GN_MKT
            , GN_FEE
            , GN_SAL
            , GN_COS
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
              #{item.userId}
            , #{item.levelCd}
            , #{item.gnCom}
            , #{item.gnSys}
            , #{item.gnMst}
            , #{item.gnAux}
            , #{item.gnMkt}
            , #{item.gnFee}
            , #{item.gnSal}
            , #{item.gnCos}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    사용자 권한정보 수정 -->
    <update id="sys1110_grntg_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE XGRNTGTB
            SET
                    LEVEL_CD        =   #{item.levelCd}
                ,   GN_COM          =   #{item.gnCom}
                ,   GN_SYS          =   #{item.gnSys}
                ,   GN_MST          =   #{item.gnMst}
                ,   GN_AUX          =   #{item.gnAux}
                ,   GN_MKT          =   #{item.gnMkt}
                ,   GN_FEE          =   #{item.gnFee}
                ,   GN_SAL          =   #{item.gnSal}
                ,   GN_COS          =   #{item.gnCos}
                ,   UPDATE_DATE     =   NOW()
                ,   UPDATE_ID       =   #{userId}
            WHERE USER_ID = #{item.userId}
        </foreach>
    </update>

    <!--   사용자 권한정보 삭제 -->
    <delete id="sys1110_grntg_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XGRNTGTB
            WHERE USER_ID  	=   #{item.userId }
        </foreach>
    </delete>

    <!--    프로그램 권한주기 list -->
    <select id="sys1110_grntp_list" resultType="java.util.HashMap">
        SELECT
               #{paramUserId}      		as  userId
             , p.PROG_ID          		as  progId
             , p.PROG_NM				as	progNm
             , if(p.SCR_YN='Y', if(p.SCR_YN=ifnull(g.SCR_YN,'N'),'Y','N'),'')        as  scrYn
             , if(p.NEW_YN='Y', if(p.NEW_YN=ifnull(g.NEW_YN,'N'),'Y','N'),'')        as  newYn
             , if(p.DBG_YN='Y', if(p.DBG_YN=ifnull(g.DBG_YN,'N'),'Y','N'),'')        as  dbgYn
             , if(p.DEL_YN='Y', if(p.DEL_YN=ifnull(g.DEL_YN,'N'),'Y','N'),'')        as  delYn
             , if(p.RPT_YN='Y', if(p.RPT_YN=ifnull(g.RPT_YN,'N'),'Y','N'),'')        as  rptYn
             , if(p.EXC_YN='Y', if(p.EXC_YN=ifnull(g.EXC_YN,'N'),'Y','N'),'')        as  excYn
             , if(p.LOC_YN='Y', if(p.LOC_YN=ifnull(g.LOC_YN,'N'),'Y','N'),'')        as  locYn
             , if(p.APP_YN='Y', if(p.APP_YN=ifnull(g.APP_YN,'N'),'Y','N'),'')        as  appYn
             , IF(ISNULL(g.prog_id), 'I', 'U')  as  iuD
        FROM XPROGTB p
            left join XGRNTPTB g ON g.user_id = #{paramUserId}  AND g.prog_id = p.prog_id
        WHERE 1=1
          AND p.MENU_FG != 'G'  -- 그룹이 아닌것만 불러오기
        <if test='paramGroupCd != null and paramGroupCd != ""'>
            AND p.LOCATION = #{paramGroupCd}
        </if>

    </select>

    <!--    프로그램 권한주기 신규등록  -->
    <insert id="sys1110_grntp_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XGRNTPTB
            (
              USER_ID
            , PROG_ID
            , SCR_YN
            , NEW_YN
            , DBG_YN
            , DEL_YN
            , RPT_YN
            , EXC_YN
            , LOC_YN
            , APP_YN
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
              #{item.userId}
            , #{item.progId}
            , #{item.scrYn}
            , #{item.newYn}
            , #{item.dbgYn}
            , #{item.delYn}
            , #{item.rptYn}
            , #{item.excYn}
            , #{item.locYn}
            , #{item.appYn}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    프로그램 권한정보 수정 -->
    <update id="sys1110_grntp_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE XGRNTPTB
            SET
                SCR_YN          =   #{item.scrYn}
            ,   NEW_YN          =   #{item.newYn}
            ,   DBG_YN          =   #{item.dbgYn}
            ,   DEL_YN          =   #{item.delYn}
            ,   RPT_YN          =   #{item.rptYn}
            ,   EXC_YN          =   #{item.excYn}
            ,   LOC_YN          =   #{item.locYn}
            ,   APP_YN          =   #{item.appYn}
            ,   UPDATE_DATE     =   NOW()
            ,   UPDATE_ID       =   #{userId}
            WHERE USER_ID   =   #{item.userId}
              AND PROG_ID   =   #{item.progId}
        </foreach>
    </update>

    <!--   프로그램 권한정보 삭제 -->
    <delete id="sys1110_grntp_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XGRNTPTB
            WHERE USER_ID  	=   #{item.userId }
              AND PROG_ID   =   #{item.progId}
        </foreach>
    </delete>


    <!--    사원정보 권한주기용 list -->
    <select id="sys1120_list" resultType="java.util.HashMap">
        SELECT
              u.USER_ID         as  userId
            , u.USER_ID         as  sourceUserId
            , u.USER_NM         as  userNm
            , u.EMP_CD          as  empCd
            , u.DEPT_CD         as  deptCd
            , c1.COMM_NM        as  deptNm
            , u.PSTN_CD         as  pstnCd
            , c2.COMM_NM        as  pstnNm
            , 'N'               as  targetYn
            , u.USER_ID         as  targetUserId
        FROM XUSERTB u
            left join db_b0main.XCOMMTB c1 ON c1.COMM_CD = u.DEPT_CD
            left join db_b0main.XCOMMTB c2 ON c2.COMM_CD = u.PSTN_CD
        WHERE u.USER_ID != 'admin'
          AND u.USE_YN = 'Y'
          AND u.USER_NM LIKE CONCAT( '%', #{paramSearchValue }, '%' )
        <if test='paramDeptCd != null and paramDeptCd != ""'>
            AND u.DEPT_CD = #{paramDeptCd}
        </if>
        ORDER by u.DEPT_CD asc, u.PSTN_CD asc
    </select>

    <!--    사용자 그룹항목 권한주기 신규등록  -->
    <insert id="sys1120_insert_grntg" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XGRNTGTB
            (
            USER_ID
            , LEVEL_CD
            , GN_COM
            , GN_SYS
            , GN_MST
            , GN_AUX
            , GN_MKT
            , GN_FEE
            , GN_SAL
            , GN_COS
            , UPDATE_DATE
            , UPDATE_ID
            )
            SELECT
              #{item.targetUserId }
            , LEVEL_CD
            , GN_COM
            , GN_SYS
            , GN_MST
            , GN_AUX
            , GN_MKT
            , GN_FEE
            , GN_SAL
            , GN_COS
            , NOW()
            , #{userId}
            from XGRNTGTB where USER_ID = #{item.sourceUserId }

        </foreach>
    </insert>
    <!--    사용자 프로그램항목 권한주기 신규등록  -->
    <insert id="sys1120_insert_grntp" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XGRNTPTB
            (
              USER_ID
            , PROG_ID
            , SCR_YN
            , NEW_YN
            , DBG_YN
            , DEL_YN
            , RPT_YN
            , EXC_YN
            , LOC_YN
            , APP_YN
            , UPDATE_DATE
            , UPDATE_ID
            )
            SELECT
              #{item.targetUserId }
            , PROG_ID
            , SCR_YN
            , NEW_YN
            , DBG_YN
            , DEL_YN
            , RPT_YN
            , EXC_YN
            , LOC_YN
            , APP_YN
            , NOW()
            , #{userId}
            from XGRNTPTB where USER_ID = #{item.sourceUserId }
        </foreach>
    </insert>

    <!--    사용자 그룹 권한주기 삭제 -->
    <delete id="sys1120_delete_grntg" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XGRNTGTB
            WHERE USER_ID  	=   #{item.targetUserId }
        </foreach>
    </delete>

    <!--    사용자 프로그램 권한주기 삭제 -->
    <delete id="sys1120_delete_grntp" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XGRNTPTB
            WHERE USER_ID  	=   #{item.targetUserId }
        </foreach>
    </delete>



    <!--    사용자 권한주기 list -->
    <select id="sys1130_user_list" resultType="java.util.HashMap">
        SELECT    u.USER_ID                as  userId
                , u.EMP_CD                 as  empCd
                , u.USER_NM                as  userNm
                , u.DEPT_CD                as  deptCd
                , if(p.SCR_YN='Y', if(p.SCR_YN=ifnull(g.SCR_YN,'N'),'Y','N'),'')        as  scrYn
                , if(p.NEW_YN='Y', if(p.NEW_YN=ifnull(g.NEW_YN,'N'),'Y','N'),'')        as  newYn
                , if(p.DBG_YN='Y', if(p.DBG_YN=ifnull(g.DBG_YN,'N'),'Y','N'),'')        as  dbgYn
                , if(p.DEL_YN='Y', if(p.DEL_YN=ifnull(g.DEL_YN,'N'),'Y','N'),'')        as  delYn
                , if(p.RPT_YN='Y', if(p.RPT_YN=ifnull(g.RPT_YN,'N'),'Y','N'),'')        as  rptYn
                , if(p.EXC_YN='Y', if(p.EXC_YN=ifnull(g.EXC_YN,'N'),'Y','N'),'')        as  excYn
                , if(p.LOC_YN='Y', if(p.LOC_YN=ifnull(g.LOC_YN,'N'),'Y','N'),'')        as  locYn
                , if(p.APP_YN='Y', if(p.APP_YN=ifnull(g.APP_YN,'N'),'Y','N'),'')        as  appYn
                , if(isnull(g.user_id), "I", "U") as  iuD
        FROM XUSERTB u
        left join XGRNTPTB g ON g.user_id = u.USER_ID  AND g.prog_id = #{paramProgId }
        left join XPROGTB p  ON p.prog_id = #{paramProgId }
        WHERE u.USER_ID != 'admin'
        <if test='paramDeptCd != null and paramDeptCd != ""'>
            AND u.DEPT_CD = #{paramDeptCd}
        </if>

    </select>

    <!--    회사정보 list -->
    <select id="sys1910_list" resultType="java.util.HashMap">
        SELECT
               a.COMP_CD         as  compCd
             , a.COMP_CD         as  oldCompCd
             , a.COMP_NM         as  compNm
             , a.COMP_NMX        as  compNmx
             , a.REP_NM          as  repNm
             , a.REG_NO          as  regNo
             , a.JONG_NO         as  jongNo
             , a.BUSIN_NO        as  businNo
             , a.BUSIN_COND      as  businCond
             , a.BUSIN_KIND      as  businKind
             , a.BUSIN_ADDR1     as  businAddr1
             , a.BUSIN_ADDR2     as  businAddr2
             , a.BUSIN_ZIP       as  businZip
             , a.POST_ADDR1      as  postAddr1
             , a.POST_ADDR2      as  postAddr2
             , a.POST_ZIP        as  postZip
             , a.MANAGER_NM      as  managerNm
             , a.EMAIL_BILL      as  emailBill
             , a.EMAIL           as  email
             , a.MOBILE          as  mobile
             , a.TEL             as  tel
             , a.FAX             as  fax
             , a.TS_DAY          as  tsDay
             , a.TE_DAY          as  teDay
             , a.EXPLAINS        as  explains
             , a.REG_DATE        as  regDate
             , a.REG_ID          as  regId
             , a.UPDATE_DATE     as  updateDate
             , a.UPDATE_ID       as  updateId
        FROM XCOMPTB a
        where 1=1
    </select>

    <!--    회사정보 선택자료 list -->
    <select id="sys1910_select" resultType="java.util.HashMap">
        SELECT
               a.COMP_CD         as  compCd
             , a.COMP_CD         as  oldCompCd
             , a.COMP_NM         as  compNm
             , a.COMP_NMX        as  compNmx
             , a.REP_NM          as  repNm
             , a.REG_NO          as  regNo
             , a.JONG_NO         as  jongNo
             , a.BUSIN_NO        as  businNo
             , a.BUSIN_COND      as  businCond
             , a.BUSIN_KIND      as  businKind
             , a.BUSIN_ADDR1     as  businAddr1
             , a.BUSIN_ADDR2     as  businAddr2
             , a.BUSIN_ZIP       as  businZip
             , a.POST_ADDR1      as  postAddr1
             , a.POST_ADDR2      as  postAddr2
             , a.POST_ZIP        as  postZip
             , a.MANAGER_NM      as  managerNm
             , a.EMAIL_BILL      as  emailBill
             , a.EMAIL           as  email
             , a.MOBILE          as  mobile
             , a.TEL             as  tel
             , a.FAX             as  fax
             , a.TS_DAY          as  tsDay
             , a.TE_DAY          as  teDay
             , a.EXPLAINS        as  explains
             , a.REG_DATE        as  regDate
             , a.REG_ID          as  regId
             , a.UPDATE_DATE     as  updateDate
             , a.UPDATE_ID       as  updateId
        FROM XCOMPTB a
        where a.COMP_CD = #{ paramCompCd }
    </select>

    <!--    회사정보 신규등록  -->
    <insert id="sys1910_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XCOMPTB
            (
              COMP_CD
            , COMP_NM
            , COMP_NMX
            , REP_NM
            , REG_NO
            , JONG_NO
            , BUSIN_NO
            , BUSIN_COND
            , BUSIN_KIND
            , BUSIN_ADDR1
            , BUSIN_ADDR2
            , BUSIN_ZIP
            , POST_ADDR1
            , POST_ADDR2
            , POST_ZIP
            , MANAGER_NM
            , EMAIL_BILL
            , EMAIL
            , MOBILE
            , TEL
            , FAX
            , TS_DAY
            , TE_DAY
            , EXPLAINS
            , REG_DATE
            , REG_ID
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
            #{item.compCd}
            , #{item.compNm}
            , #{item.compNmx}
            , #{item.repNm}
            , #{item.regNo}
            , #{item.jongNo}
            , #{item.businNo}
            , #{item.businCond}
            , #{item.businKind}
            , #{item.businAddr1}
            , #{item.businAddr2}
            , #{item.businZip}
            , #{item.postAddr1}
            , #{item.postAddr2}
            , #{item.postZip}
            , #{item.managerNm}
            , #{item.emailBill}
            , #{item.email}
            , #{item.mobile}
            , #{item.tel}
            , #{item.fax}
            , #{item.tsDay}
            , #{item.teDay}
            , #{item.explains}
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    회사정보 수정 -->
    <update id="sys1910_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE XCOMPTB
            SET
                COMP_CD         = #{item.compCd}
            ,   COMP_NM         = #{item.compNm}
            ,   COMP_NMX        = #{item.compNmx}
            ,   REP_NM          = #{item.repNm}
            ,   REG_NO          = #{item.regNo}
            ,   JONG_NO         = #{item.jongNo}
            ,   BUSIN_NO        = #{item.businNo}
            ,   BUSIN_COND      = #{item.businCond}
            ,   BUSIN_KIND      = #{item.businKind}
            ,   BUSIN_ADDR1     = #{item.businAddr1}
            ,   BUSIN_ADDR2     = #{item.businAddr2}
            ,   BUSIN_ZIP       = #{item.businZip}
            ,   POST_ADDR1      = #{item.postAddr1}
            ,   POST_ADDR2      = #{item.postAddr2}
            ,   POST_ZIP        = #{item.postZip}
            ,   MANAGER_NM      = #{item.managerNm}
            ,   EMAIL_BILL      = #{item.emailBill}
            ,   EMAIL           = #{item.email}
            ,   MOBILE          = #{item.mobile}
            ,   TEL             = #{item.tel}
            ,   FAX             = #{item.fax}
            ,   TS_DAY          = #{item.tsDay}
            ,   TE_DAY          = #{item.teDay}
            ,   EXPLAINS        = #{item.explains}
            ,   UPDATE_ID       = #{userId}
            ,   UPDATE_DATE     = NOW()
            WHERE COMP_CD = #{item.oldCompCd}
        </foreach>
    </update>

    <!--    회사정보 삭제 -->
    <delete id="sys1910_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XCOMPTB
            WHERE COMP_CD  	=   #{item.oldCompCd }
        </foreach>
    </delete>




    <!--   메뉴얼관리(사용자용) 프로그램 list -->
    <select id="sys4020_list" resultType="java.util.HashMap">
        SELECT
               a.SEQ                                as      id
             , a.MENU_PARENT                        as      menuParent
             , a.MENU_ID                            as      menuId
             , CONCAT('sub_menu_', a.PROG_ID)       as      labelExt
             , a.PROG_NM                            as      label
             , a.PROG_ID                            as      progId
             , a.ICON                               as      icon
             , a.TYPE                               as      header
             , CONCAT('/main/', LOWER(a.PROG_ID))   as      url
             , if(db.PROG_ID is null, 'N', 'Y')	    as      docYn
        FROM db_b0main.XMENUTB a
                 left join XDOCBTB db ON db.PROG_ID = a.PROG_ID
        WHERE 1=1
          AND a.LOCATION = #{ paramGroupCd }
        ORDER BY a.SEQ
    </select>

    <select id="sys4020_docB_select" resultType="java.util.HashMap">
        SELECT
               a.PROG_ID		    as  progId
             , a.CONTENTS          	as  contents
        FROM XDOCBTB a
        WHERE a.PROG_ID = #{ paramProgId }
    </select>


    <!--    메뉴얼(사용사용) 신규저장  -->
    <insert id="sys4020_docB_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XDOCBTB
            (
              PROG_ID
            , CONTENTS
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
              #{item.progId}
            , #{item.contents}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    메뉴얼(사용자용) 수정  -->
    <update id="sys4020_docB_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE XDOCBTB
            SET
                CONTENTS        = #{item.contents}
            ,   UPDATE_DATE     = NOW()
            ,   UPDATE_ID       = #{userId}

            WHERE PROG_ID = #{item.progId}
        </foreach>
    </update>

    <!--    메뉴얼(사용자공통) 삭제  -->
    <delete id="sys4020_docB_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XDOCBTB
            WHERE PROG_ID  	=   #{item.progId }
        </foreach>
    </delete>


    <!--   메뉴얼관리(사용자전용) 프로그램 list -->
    <select id="sys4030_list" resultType="java.util.HashMap">
        SELECT
               a.SEQ                                as      id
             , a.MENU_PARENT                        as      menuParent
             , a.MENU_ID                            as      menuId
             , CONCAT('sub_menu_', a.PROG_ID)       as      labelExt
             , a.PROG_NM                            as      label
             , a.PROG_ID                            as      progId
             , a.ICON                               as      icon
             , a.TYPE                               as      header
             , CONCAT('/main/', LOWER(a.PROG_ID))   as      url
             , if(du.PROG_ID is null, 'N', 'Y')	    as      docYn
             , #{paramUserId}                       as      userid
        FROM db_b0main.XMENUTB a
                 left join XDOCUTB du ON du.PROG_ID = a.PROG_ID AND du.USER_ID = #{paramUserId}
        WHERE 1=1
          AND a.LOCATION = #{ paramGroupCd }
        ORDER BY a.SEQ
    </select>

    <select id="sys4030_docU_select" resultType="java.util.HashMap">
        SELECT
               a.PROG_ID		    as  progId
             , a.USER_ID     	    as  userId
             , a.CONTENTS          	as  contents
        FROM XDOCUTB a
        WHERE a.PROG_ID = #{ paramProgId }
          AND a.USER_ID  = #{ paramUserId }
    </select>


    <!--    메뉴얼(사용사용) 신규저장  -->
    <insert id="sys4030_docU_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XDOCUTB
            (
              PROG_ID
            , USER_ID
            , CONTENTS
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
              #{item.progId}
            , #{item.userId}
            , #{item.contents}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    메뉴얼(사용자용) 수정  -->
    <update id="sys4030_docU_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE XDOCUTB
            SET
                CONTENTS        = #{item.contents}
            ,   UPDATE_DATE     = NOW()
            ,   UPDATE_ID       = #{userId}

            WHERE PROG_ID   =   #{ item.progId }
              AND USER_ID   =   #{ item.userId }
        </foreach>
    </update>

    <!--    메뉴얼(사용자용) 삭제  -->
    <delete id="sys4030_docU_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XDOCUTB
            WHERE PROG_ID  	=   #{ item.progId }
              AND USER_ID   =   #{ item.userId }
        </foreach>
    </delete>


    <!--   즐겨찾기 메뉴설정 메뉴정보 list -->
    <select id="sys5030_fav_menu_list" resultType="java.util.HashMap">
        SELECT
               MENU_ID          as  id
             , MENU_PARENT      as  parent
             , SEQ              as  seq
             , PROG_NM          as  text
             , LOCATION         as  groupCd
             , PROG_ID          as  progId
             , ICON             as  icon
             , STATE_OPENED     as  stateOpened
             , TYPE             as  type

        FROM XMFAVTB

        WHERE 1=1
          and USER_ID = #{paramUserId}
        order by  MENU_PARENT, SEQ
    </select>

    <!--    메뉴설정 삭제  -->
    <delete id="sys5030_fav_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XMFAVTB
            WHERE USER_ID  = #{item.userId }
        </foreach>
    </delete>

    <!--    메뉴설정 저장  -->
    <insert id="sys5030_fav_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO XMFAVTB    (
              USER_ID
            , LOCATION
            , SEQ
            , MENU_ID
            , MENU_PARENT
            , PROG_NM
            , PROG_ID
            , ICON
            , STATE_OPENED
            , TYPE
            , REG_DATE
            , REG_ID
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
              #{item.userId }
            , #{item.groupCd }
            , #{item.seq }
            , #{item.menuId }
            , #{item.menuParent }
            , #{item.progNm }
            , #{item.progId }
            , #{item.icon }
            , #{item.stateOpened }
            , #{item.type }
            , now()
            , #{userId}
            , now()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    메뉴설정 선택된 항목 삭제  -->
    <delete id="sys5030_fav_select_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM XMFAVTB
            WHERE USER_ID  = #{item.userId }
              AND LOCATION = #{item.location }
        </foreach>
    </delete>


</mapper>
