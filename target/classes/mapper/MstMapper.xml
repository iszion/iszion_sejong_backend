<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iszion.api.mst.dao.MstDAO">


    <!--    공통코드 list -->
    <select id="comm_option_list" resultType="java.util.HashMap">
        SELECT
               a.COMM_CD            as  commCd
             , a.COMM_NM            as  commNm
        FROM MCOMMTB a
        WHERE LEFT(a.COMM_CD,3) =   #{paramCommCd1}
          AND SUBSTRING(a.COMM_CD, 4,4) != '0000'

    </select>

    <!--    Help코드 list -->
    <select id="helpAgent_list" resultType="java.util.HashMap">
        SELECT
               a.AGENT_CD           as  agentCd
             , a.AGENT_NM           as  agentNm
        FROM MAGENTTB a
        WHERE 1=1
          AND a.OUT_DAY <![CDATA[ >= ]]> #{paramCloseDay }
            <if test='paramValueNm != null and paramValueNm != ""'>
                AND (   a.AGENT_NM LIKE CONCAT( '%', #{paramValueNm }, '%' )
                    OR  a.AGENT_CD LIKE CONCAT( '%', #{paramValueNm }, '%')
                    )
            </if>

    </select>

    <select id="helpCust_list" resultType="java.util.HashMap">
        SELECT
               a.CUST_CD           as  custCd
             , a.CUST_NM           as  custNm
             , a.CUST_BUSIN_NM     as  custBusinNm
             , a.CUST_BUSIN_NO     as  custBusinNo
             , a.CUST_OWNER        as  custOwner
             , a.USE_YN            as  useYn
        FROM MCUSTTB a
        WHERE 1=1
            <if test='paramAll == "N"'>
               AND a.USE_YN =  #{paramAll}
            </if>
            <if test='paramValueNm != null and paramValueNm != ""'>
                AND (   a.CUST_NM LIKE CONCAT( '%', #{paramValueNm }, '%' )
                    OR  a.CUST_BUSIN_NM LIKE CONCAT( '%', #{paramValueNm }, '%')
                    OR  a.CUST_CD LIKE CONCAT( '%', #{paramValueNm }, '%')
                    )
            </if>

    </select>


    <select id="helpProd_list" resultType="java.util.HashMap">
        SELECT
              p.PROD_CD    as  prodCd
            , p.PROD_NM    as  prodNm
            , p.AUTHOR_NM  as  authorNm
            , p.I_PRICE    as  iPrice
            , p.O_PRICE    as  oPrice
            , p.S_PRICE    as  sPrice
            , p.PUB_DATE   as  pubDate
            , p.USE_YN     as  useYn
        FROM MPRODTB p
        WHERE 1=1
            <if test='paramAll == "N"'>
                AND p.USE_YN =  #{paramAll}
            </if>
            <if test='paramValueNm != null and paramValueNm != ""'>
                AND (   p.PROD_NM LIKE CONCAT( '%', #{paramValueNm }, '%' )
                    OR  p.PROD_CD LIKE CONCAT( '%', #{paramValueNm }, '%')
                    )
            </if>
        ORDER BY p.PUB_DATE DESC

    </select>

    <!--    기준인사정보 list -->
    <select id="mst1010_list" resultType="java.util.HashMap">
        SELECT
              e.EMP_CD          as  empCd
            , e.EMP_CD          as  oldEmpCd
            , e.EMP_NM          as  empNm
            , e.DEPT_CD         as  deptCd
            , c1.COMM_NM 		as	deptNm
            , e.PSTN_CD         as  pstnCd
            , c2.COMM_NM 		as	pstnNm
            , e.TITL_CD         as  titlCd
            , c3.COMM_NM 		as	titlNm
            , e.BIRTHDAY        as  birthday
            , e.IN_DAY          as  inDay
            , e.OUT_DAY         as  outDay
            , e.MOBILE          as  mobile
            , e.EMAIL           as  email
            , e.EDU_LEVEL       as  eduLevel
            , e.FINAL_SCHOOL    as  finalSchool
            , e.EXPLAINS        as  explains
            , e.REG_DATE        as  regDate
            , e.REG_ID          as  regId
            , e.UPDATE_DATE     as  updateDate
            , e.UPDATE_ID       as  updateId
            , e.IMAGE_FILE_NM   as  imageFileNm
            , e.IMAGE_FILE_NM_FULL as imageFileNmFull
            , e.SIGN_FILE_NM   as  signFileNm
            , e.SIGN_FILE_NM_FULL as signFileNmFull
        FROM HEMPTB e
            left join MCOMMTB c1 ON c1.COMM_CD = e.DEPT_CD
            left join MCOMMTB c2 ON c2.COMM_CD = e.PSTN_CD
            left join MCOMMTB c3 ON c3.COMM_CD = e.TITL_CD
        WHERE 1=1
        <if test='paramDeptCd != null and paramDeptCd != ""'>
            AND e.DEPT_CD = #{paramDeptCd}
        </if>
        <if test='paramSearchWord != null and paramSearchWord != ""'>
            AND (
                    e.EMP_NM LIKE CONCAT('%', #{paramSearchWord}, '%')
                OR  e.EMP_CD LIKE CONCAT('%', #{paramSearchWord}, '%')
                )
        </if>
        ORDER by e.DEPT_CD asc, e.PSTN_CD asc
    </select>

    <select id="mst1010_select" resultType="java.util.HashMap">
        SELECT
              e.EMP_CD          as  empCd
            , e.PASSWD          as  passwd
            , e.EMP_CD          as  oldEmpCd
            , e.EMP_NM          as  empNm
            , e.DEPT_CD         as  deptCd
            , c1.COMM_NM		as	deptNm
            , e.PSTN_CD         as  pstnCd
            , c2.COMM_NM        as  pstnNm
            , e.TITL_CD         as  titlCd
            , c3.COMM_NM        as  titlNm
            , e.BIRTHDAY        as  birthday
            , e.IN_DAY          as  inDay
            , e.OUT_DAY         as  outDay
            , e.MOBILE          as  mobile
            , e.EMAIL           as  email
            , e.EDU_LEVEL       as  eduLevel
            , e.FINAL_SCHOOL    as  finalSchool
            , e.EXPLAINS        as  explains
            , e.REG_DATE        as  regDate
            , e.REG_ID          as  regId
            , e.UPDATE_DATE     as  updateDate
            , e.UPDATE_ID       as  updateId
            , e.IMAGE_FILE_NM   as  imageFileNm
            , e.IMAGE_FILE_NM_FULL as imageFileNmFull
            , e.SIGN_FILE_NM    as  signFileNm
            , e.SIGN_FILE_NM_FULL   as signFileNmFull
        FROM HEMPTB e
                 left join MCOMMTB c1 ON c1.COMM_CD = e.DEPT_CD
                 left join MCOMMTB c2 ON c2.COMM_CD = e.PSTN_CD
                 left join MCOMMTB c3 ON c3.COMM_CD = e.TITL_CD
        where 1=1
          AND e.EMP_CD      =   #{ paramEmpCd }
    </select>

    <select id="mst1010_empCd_check" resultType="java.util.HashMap">
        SELECT
              count(e.EMP_CD)   as  ch
        FROM HEMPTB e
        where e.EMP_CD      =   #{ paramEmpCd }
    </select>

    <insert id="mst1010_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO HEMPTB
                (
                      EMP_CD
                    , PASSWD
                    , EMP_NM
                    , DEPT_CD
                    , PSTN_CD
                    , TITL_CD
                    , BIRTHDAY
                    , IN_DAY
                    , OUT_DAY
                    , MOBILE
                    , EMAIL
                    , EDU_LEVEL
                    , FINAL_SCHOOL
                    , IMAGE_FILE_NM
                    , IMAGE_FILE_NM_FULL
                    , SIGN_FILE_NM
                    , SIGN_FILE_NM_FULL
                    , EXPLAINS
                    , REG_DATE
                    , REG_ID
                    , UPDATE_DATE
                    , UPDATE_ID
                ) VALUES (
                      #{item.empCd}
                    , #{item.passwd}
                    , #{item.empNm}
                    , #{item.deptCd}
                    , #{item.pstnCd}
                    , #{item.titlCd}
                    , #{item.birthday}
                    , #{item.inDay}
                    , #{item.outDay}
                    , #{item.mobile}
                    , #{item.email}
                    , #{item.eduLevel}
                    , #{item.finalSchool}
                    , null
                    , null
                    , null
                    , null
                    ,  #{item.explains}
                    , NOW()
                    , #{userId}
                    , NOW()
                    , #{userId}
                )
        </foreach>
    </insert>

    <update id="mst1010_fileSave" parameterType="java.util.Map">
        UPDATE HEMPTB SET
            IMAGE_FILE_NM = #{IMAGE_FILE_NM}
        ,   IMAGE_FILE_NM_FULL = #{IMAGE_FILE_NM_FULL}
        WHERE EMP_CD = #{empCd}

    </update>


    <delete id="mst1010_fileDelete" parameterType="java.util.Map">
        UPDATE HEMPTB SET
              IMAGE_FILE_NM = null
            , IMAGE_FILE_NM_FULL = null
        WHERE EMP_CD = #{empCd}
    </delete>


    <update id="mst1010_fileSave_sign" parameterType="java.util.Map">
        UPDATE HEMPTB
            SET
                SIGN_FILE_NM = #{SIGN_FILE_NM}
            ,   SIGN_FILE_NM_FULL = #{SIGN_FILE_NM_FULL}
        WHERE EMP_CD = #{empCd}

    </update>


    <delete id="mst1010_fileDelete_sign" parameterType="java.util.Map">
        UPDATE HEMPTB
            SET
                SIGN_FILE_NM = null
            ,   SIGN_FILE_NM_FULL = null
        WHERE EMP_CD = #{empCd}
    </delete>


    <update id="mst1010_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE HEMPTB
                SET
                      EMP_CD        =   #{item.empCd}
                    , EMP_NM        =   #{item.empNm}
                    , DEPT_CD       =   #{item.deptCd}
                    , PSTN_CD       =   #{item.pstnCd}
                    , TITL_CD       =   #{item.titlCd}
                    , BIRTHDAY      =   #{item.birthday}
                    , IN_DAY        =   #{item.inDay}
                    , OUT_DAY       =   #{item.outDay}
                    , MOBILE        =   #{item.mobile}
                    , EMAIL         =   #{item.email}
                    , EDU_LEVEL     =   #{item.eduLevel}
                    , FINAL_SCHOOL  =   #{item.finalSchool}
                    , EXPLAINS      =   #{item.explains}
                    , UPDATE_DATE   =   NOW()
                    , UPDATE_ID     =   #{userId}
                WHERE EMP_CD        =   #{item.oldEmpCd}
        </foreach>
    </update>

    <delete id="mst1010_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM HEMPTB
            WHERE EMP_CD       =   #{item.empCd}
        </foreach>
    </delete>


    <!-- ###  도서정보 불러오기 list    ################################ -->
    <select id="mst2010_maxPages" resultType="java.util.HashMap">
        SELECT
            count(*)  as maxPages
          FROM MPRODTB  d
         WHERE 1 = 1
        <if test='paramProdDiv != null and paramProdDiv != ""'>
            AND d.PROD_DIV = #{paramProdDiv }
        </if>
        <if test='paramProdFg != null and paramProdFg != ""'>
            AND d.PROD_FG = #{paramProdFg }
        </if>
        <if test='paramSearchValue != null and paramSearchValue != ""'>
            AND (
            LOWER(d.PROD_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(d.PROD_CD) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            )
        </if>

        ORDER BY d.MAKE_DATE DESC

    </select>

    <select id="mst2010_list" resultType="java.util.HashMap">
        SELECT
                  ROW_NUMBER() OVER (ORDER BY d.MAKE_DATE desc) as rowNum
                , d.PROD_CD				as	prodCd
                , d.PROD_DIV			as	prodDiv
                , c1.COMM_NM			as	prodDivNm
                , d.PROD_NM				as	prodNm
                , d.AUTHOR_NM			as	authorNm
                , d.PROD_FG				as	prodFg
                , c2.COMM_NM			as	prodFgNm
                , d.PROD_CL				as	prodCl
                , d.ISBN				as	isbn
                , d.I_PRICE				as	iPrice
                , d.O_PRICE				as	oPrice
                , d.S_PRICE				as	sPrice
                , d.P1_PAGE				as	p1Page
                , d.P2_PAGE				as	p2Page
                , d.EBOOK_YN			as	ebookYn
                , d.EBOOK_ISBN			as	ebookIsbn
                , d.EBOOK_PRICE			as	ebookPrice
                , d.USE_YN				as	useYn
                , d.USE_EXPLAIN			as	useExplain
                , d.SUN_NM				as	sunNm
                , d.COPYRIGHT_NM		as	copyrightNm
                , d.COPYRIGHT_SDAY		as	copyrightSday
                , d.COPYRIGHT_EDAY		as	copyrightEday
                , d.AGENT_CD			as	agentCd
                , ag.AGENT_NM			as	agentNm
                , d.BUNDLE_PROD_CD		as	bundleProdCd
                , d.MANAGER_NM			as	managerNm
                , d.REMARKS				as	remarks
                , d.MAKE_DATE			as	makeDate
                , d.PUB_DATE			as	pubDate
                , d.REG_DATE			as	regDate
                , d.REG_ID				as	regId
                , d.UPDATE_DATE			as	updateDate
                , d.UPDATE_ID			as	updateId

        FROM MPRODTB d
            left join MAGENTTB ag ON ag.AGENT_CD = d.AGENT_CD
            left join MCOMMTB c1 ON c1.COMM_CD = d.PROD_DIV
            left join MCOMMTB c2 ON c2.COMM_CD = d.PROD_FG

        WHERE 1 = 1
        <if test='paramProdDiv != null and paramProdDiv != ""'>
            AND d.PROD_DIV = #{paramProdDiv }
        </if>
        <if test='paramProdFg != null and paramProdFg != ""'>
            AND d.PROD_FG = #{paramProdFg }
        </if>
        <if test='paramSearchValue != null and paramSearchValue != ""'>
            AND (
            LOWER(d.PROD_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(d.PROD_CD) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            )
        </if>
        ORDER BY d.MAKE_DATE DESC
        LIMIT #{paramPageRows} OFFSET #{paramStartRowNum }
    </select>

    <select id="mst2010_select" resultType="java.util.HashMap">
        SELECT
                  d.PROD_CD				as	prodCd
                , d.PROD_CD  			as	oldProdCd
                , d.PROD_DIV			as	prodDiv
                , c1.COMM_NM			as	prodDivNm
                , d.PROD_NM				as	prodNm
                , d.AUTHOR_NM			as	authorNm
                , d.PROD_FG				as	prodFg
                , c2.COMM_NM			as	prodFgNm
                , d.PROD_CL				as	prodCl
                , d.ISBN				as	isbn
                , d.I_PRICE				as	iPrice
                , d.O_PRICE				as	oPrice
                , d.S_PRICE				as	sPrice
                , d.P1_PAGE				as	p1Page
                , d.P2_PAGE				as	p2Page
                , d.EBOOK_YN			as	ebookYn
                , d.EBOOK_ISBN			as	ebookIsbn
                , d.EBOOK_PRICE			as	ebookPrice
                , d.USE_YN				as	useYn
                , d.USE_EXPLAIN			as	useExplain
                , d.SUN_NM				as	sunNm
                , d.COPYRIGHT_NM		as	copyrightNm
                , d.COPYRIGHT_SDAY		as	copyrightSday
                , d.COPYRIGHT_EDAY		as	copyrightEday
                , d.AGENT_CD			as	agentCd
                , ag.AGENT_NM			as	agentNm
                , d.BUNDLE_PROD_CD		as	bundleProdCd
                , d.MANAGER_NM			as	managerNm
                , d.REMARKS				as	remarks
                , d.MAKE_DATE			as	makeDate
                , d.PUB_DATE			as	pubDate
                , d.REG_DATE			as	regDate
                , d.REG_ID				as	regId
                , d.UPDATE_DATE			as	updateDate
                , d.UPDATE_ID			as	updateId

                , 'U'                   as  iuD

        FROM MPRODTB d
             left join MAGENTTB ag ON ag.AGENT_CD = d.AGENT_CD
             left join MCOMMTB c1 ON c1.COMM_CD = d.PROD_DIV
             left join MCOMMTB c2 ON c2.COMM_CD = d.PROD_FG
        WHERE d.PROD_CD     = 	#{paramProdCd}

    </select>

    <select id="mst2010_max_codeCheck" resultType="java.util.HashMap">
        select IFNULL(CAST(MAX(PROD_CD) as unsigned) + 1, '1001') as maxCd
          FROM MPRODTB
          WHERE PROD_CD <![CDATA[ < ]]> 8000;

    </select>


    <insert id="mst2010_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MPRODTB
                (
                      PROD_CD
                    , PROD_DIV
                    , PROD_NM
                    , AUTHOR_NM
                    , PROD_FG
                    , PROD_CL
                    , ISBN
                    , I_PRICE
                    , O_PRICE
                    , S_PRICE
                    , P1_PAGE
                    , P2_PAGE
                    , EBOOK_YN
                    , EBOOK_ISBN
                    , EBOOK_PRICE
                    , USE_YN
                    , USE_EXPLAIN
                    , SUN_NM
                    , COPYRIGHT_NM
                    , COPYRIGHT_SDAY
                    , COPYRIGHT_EDAY
                    , AGENT_CD
                    , BUNDLE_PROD_CD
                    , MANAGER_NM
                    , REMARKS
                    , MAKE_DATE
                    , PUB_DATE
                    , REG_DATE
                    , REG_ID
                    , UPDATE_DATE
                    , UPDATE_ID
                ) VALUES (
                      #{item.prodCd }
                    , #{item.prodDiv }
                    , #{item.prodNm }
                    , #{item.authorNm }
                    , #{item.prodFg }
                    , #{item.prodCl }
                    , #{item.isbn }
                    , #{item.iPrice }
                    , #{item.oPrice }
                    , #{item.sPrice }
                    , #{item.p1Page }
                    , #{item.p2Page }
                    , #{item.ebookYn }
                    , #{item.ebookIsbn }
                    , #{item.ebookPrice }
                    , #{item.useYn }
                    , #{item.useExplain }
                    , #{item.sunNm }
                    , #{item.copyrightNm }
                    , #{item.copyrightSday }
                    , #{item.copyrightEday }
                    , #{item.agentCd }
                    , #{item.bundleProdCd }
                    , #{item.managerNm }
                    , #{item.remarks }
                    , #{item.makeDate }
                    , #{item.pubDate }
                    , now()
                    , #{userId}
                    , now()
                    , #{userId}
                )
        </foreach>
    </insert>

    <update id="mst2010_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MPRODTB
                SET
                      PROD_CD        =   #{item.prodCd }
                    , PROD_DIV       =   #{item.prodDiv }
                    , PROD_NM        =   #{item.prodNm }
                    , AUTHOR_NM      =   #{item.authorNm }
                    , PROD_FG        =   #{item.prodFg }
                    , PROD_CL        =   #{item.prodCl }
                    , ISBN           =   #{item.isbn }
                    , I_PRICE        =   #{item.iPrice }
                    , O_PRICE        =   #{item.oPrice }
                    , S_PRICE        =   #{item.sPrice }
                    , P1_PAGE        =   #{item.p1Page }
                    , P2_PAGE        =   #{item.p2Page }
                    , EBOOK_YN       =   #{item.ebookYn }
                    , EBOOK_ISBN     =   #{item.ebookIsbn }
                    , EBOOK_PRICE    =   #{item.ebookPrice }
                    , USE_YN         =   #{item.useYn }
                    , USE_EXPLAIN    =   #{item.useExplain }
                    , SUN_NM         =   #{item.sunNm }
                    , COPYRIGHT_NM   =   #{item.copyrightNm }
                    , COPYRIGHT_SDAY =   #{item.copyrightSday }
                    , COPYRIGHT_EDAY =   #{item.copyrightEday }
                    , AGENT_CD       =   #{item.agentCd }
                    , BUNDLE_PROD_CD =   #{item.bundleProdCd }
                    , MANAGER_NM	 =   #{item.managerNm }
                    , REMARKS        =   #{item.remarks }
                    , MAKE_DATE      =   #{item.makeDate }
                    , PUB_DATE       =   #{item.pubDate }
                    , UPDATE_DATE    =   now()
                    , UPDATE_ID      =   #{userId }

            WHERE PROD_CD       =   #{item.oldProdCd}
        </foreach>
    </update>

    <delete id="mst2010_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MPRODTB
            WHERE PROD_CD     	=   #{item.oldProdCd }
        </foreach>
    </delete>


    <!-- ###  거래처정보 불러오기 list    ################################ -->
    <select id="mst2020_maxPages" resultType="java.util.HashMap">
        SELECT
            count(*)  as maxPages
          FROM MCUSTTB  a
        WHERE 1 = 1
        AND a.USE_YN = #{paramUseYn }
        <if test='paramDivCd != null and paramDivCd != ""'>
            AND a.DIV_CD = #{paramDivCd }
        </if>
        <if test='paramSearchValue != null and paramSearchValue != ""'>
            AND (
            LOWER(a.CUST_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(a.CUST_BUSIN_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(a.CUST_CD) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            )
        </if>
        ORDER BY a.MAKE_DATE DESC

    </select>

    <select id="mst2020_list" resultType="java.util.HashMap">
        SELECT
              ROW_NUMBER() OVER (ORDER BY a.MAKE_DATE desc) as rowNum
            , a.CUST_CD			as	custCd
            , a.CUST_NM			as	custNm
            , a.DIV_CD			as	divCd
            , c1.COMM_NM		as	divCdNm
            , a.ZONE_NM			as	zoneNm
            , a.CUST_BUSIN_NM	as	custBusinNm
            , a.CUST_OWNER		as	custOwner
            , a.CUST_BUSIN_NO	as	custBusinNo
            , a.CUST_COND		as	custCond
            , a.CUST_KIND		as	custKind
            , a.CUST_ZIP1		as	custZip1
            , a.CUST_ADDR1		as	custAddr1
            , a.CUST_ADDR1X		as	custAddr1X
            , a.CUST_ZIP2		as	custZip2
            , a.CUST_ADDR2		as	custAddr2
            , a.CUST_ADDR2X		as	custAddr2X
            , a.MANAGER_NM		as	managerNm
            , a.MOBILE			as	mobile
            , a.TEL				as	tel
            , a.FAX				as	fax
            , a.YUL_WT			as	yulWt
            , a.YUL_HM			as	yulHm
            , a.YUL_MJ			as	yulMj
            , a.YUL_NP			as	yulNp
            , a.YUL_TB			as	yulTb
            , a.YUL_HD			as	yulHd
            , a.YUL_HS			as	yulHs
            , a.YUL_SG			as	yulSg
            , a.YUL_GT			as	yulGt
            , a.LIMIT_AMT		as	limitAmt
            , a.MAKE_DATE		as	makeDate
            , a.BILL_YN			as	billYn
            , a.BILL_EMAIL		as	billEmail
            , a.USE_YN			as	useYn
            , a.USE_EXPLAIN		as	useExplain
            , a.REMARKS			as	remarks
            , a.REMARKS2		as	remarks2
            , a.REG_DATE		as	regDate
            , a.REG_ID			as	regId
            , a.UPDATE_DATE		as	updateDate
            , a.UPDATE_ID		as	updateId

        FROM MCUSTTB a
            left join MCOMMTB c1 ON c1.COMM_CD = a.DIV_CD

        WHERE 1 = 1
          AND a.USE_YN = #{paramUseYn }
        <if test='paramDivCd != null and paramDivCd != ""'>
            AND a.DIV_CD = #{paramDivCd }
        </if>
        <if test='paramSearchValue != null and paramSearchValue != ""'>
            AND (
            LOWER(a.CUST_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(a.CUST_BUSIN_NM) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            OR
            LOWER(a.CUST_CD) LIKE CONCAT( '%', #{paramSearchValue }, '%' )
            )
        </if>
        ORDER BY a.MAKE_DATE DESC
        LIMIT #{paramPageRows} OFFSET #{paramStartRowNum }
    </select>

    <select id="mst2020_select" resultType="java.util.HashMap">
        SELECT
               a.CUST_CD		as	custCd
             , a.CUST_CD		as	oldCustCd
             , a.CUST_NM		as	custNm
             , a.DIV_CD			as	divCd
             , c1.COMM_NM		as	divCdNm
             , a.ZONE_NM		as	zoneNm
             , a.CUST_BUSIN_NM	as	custBusinNm
             , a.CUST_OWNER		as	custOwner
             , a.CUST_BUSIN_NO	as	custBusinNo
             , a.CUST_COND		as	custCond
             , a.CUST_KIND		as	custKind
             , a.CUST_ZIP1		as	custZip1
             , a.CUST_ADDR1		as	custAddr1
             , a.CUST_ADDR1X	as	custAddr1X
             , a.CUST_ZIP2		as	custZip2
             , a.CUST_ADDR2		as	custAddr2
             , a.CUST_ADDR2X	as	custAddr2X
             , a.MANAGER_NM		as	managerNm
             , a.MOBILE			as	mobile
             , a.TEL			as	tel
             , a.FAX			as	fax
             , a.YUL_WT			as	yulWt
             , a.YUL_HM			as	yulHm
             , a.YUL_MJ			as	yulMj
             , a.YUL_NP			as	yulNp
             , a.YUL_TB			as	yulTb
             , a.YUL_HD			as	yulHd
             , a.YUL_HS			as	yulHs
             , a.YUL_SG			as	yulSg
             , a.YUL_GT			as	yulGt
             , a.LIMIT_AMT		as	limitAmt
             , a.MAKE_DATE		as	makeDate
             , a.BILL_YN		as	billYn
             , a.BILL_EMAIL		as	billEmail
             , a.USE_YN			as	useYn
             , a.USE_EXPLAIN	as	useExplain
             , a.REMARKS		as	remarks
             , a.REMARKS2		as	remarks2
             , a.REG_DATE		as	regDate
             , a.REG_ID			as	regId
             , a.UPDATE_DATE	as	updateDate
             , a.UPDATE_ID		as	updateId

            , 'U'               as  iuD

        FROM MCUSTTB a
             left join MCOMMTB c1 ON c1.COMM_CD = a.DIV_CD
        WHERE a.CUST_CD         = 	#{paramCustCd}

    </select>

    <select id="mst2020_max_codeCheck" resultType="java.util.HashMap">
        select IFNULL(CAST(MAX(CUST_CD) as unsigned) + 1, '10001') as maxCd
          FROM MCUSTTB
          WHERE CUST_CD <![CDATA[ < ]]> 80000;

    </select>


    <insert id="mst2020_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MCUSTTB
                (
                      CUST_CD
                    , CUST_NM
                    , DIV_CD
                    , ZONE_NM
                    , CUST_BUSIN_NM
                    , CUST_OWNER
                    , CUST_BUSIN_NO
                    , CUST_COND
                    , CUST_KIND
                    , CUST_ZIP1
                    , CUST_ADDR1
                    , CUST_ADDR1X
                    , CUST_ZIP2
                    , CUST_ADDR2
                    , CUST_ADDR2X
                    , MANAGER_NM
                    , MOBILE
                    , TEL
                    , FAX
                    , YUL_WT
                    , YUL_HM
                    , YUL_MJ
                    , YUL_NP
                    , YUL_TB
                    , YUL_HD
                    , YUL_HS
                    , YUL_SG
                    , YUL_GT
                    , LIMIT_AMT
                    , MAKE_DATE
                    , BILL_YN
                    , BILL_EMAIL
                    , USE_YN
                    , USE_EXPLAIN
                    , REMARKS
                    , REMARKS2
                    , REG_DATE
                    , REG_ID
                    , UPDATE_DATE
                    , UPDATE_ID
                ) VALUES (
                      #{item.custCd }
                    , #{item.custNm }
                    , #{item.divCd }
                    , #{item.zoneNm }
                    , #{item.custBusinNm }
                    , #{item.custOwner }
                    , #{item.custBusinNo }
                    , #{item.custCond }
                    , #{item.custKind }
                    , #{item.custZip1 }
                    , #{item.custAddr1 }
                    , #{item.custAddr1X }
                    , #{item.custZip2 }
                    , #{item.custAddr2 }
                    , #{item.custAddr2X }
                    , #{item.managerNm }
                    , #{item.mobile }
                    , #{item.tel }
                    , #{item.fax }
                    , #{item.yulWt }
                    , #{item.yulHm }
                    , #{item.yulMj }
                    , #{item.yulNp }
                    , #{item.yulTb }
                    , #{item.yulHd }
                    , #{item.yulHs }
                    , #{item.yulSg }
                    , #{item.yulGt }
                    , #{item.limitAmt }
                    , #{item.makeDate }
                    , #{item.billYn }
                    , #{item.billEmail }
                    , #{item.useYn }
                    , #{item.useExplain }
                    , #{item.remarks }
                    , #{item.remarks2 }
                    , now()
                    , #{userId}
                    , now()
                    , #{userId}
                )
        </foreach>
    </insert>

    <update id="mst2020_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCUSTTB
                SET
                       CUST_CD	        =   #{item.custCd }
                    ,  CUST_NM	        =   #{item.custNm }
                    ,  DIV_CD	        =   #{item.divCd }
                    ,  ZONE_NM	        =   #{item.zoneNm }
                    ,  CUST_BUSIN_NM    =   #{item.custBusinNm }
                    ,  CUST_OWNER       =   #{item.custOwner }
                    ,  CUST_BUSIN_NO    =   #{item.custBusinNo }
                    ,  CUST_COND	    =   #{item.custCond }
                    ,  CUST_KIND	    =   #{item.custKind }
                    ,  CUST_ZIP1	    =   #{item.custZip1 }
                    ,  CUST_ADDR1       =   #{item.custAddr1 }
                    ,  CUST_ADDR1X      =   #{item.custAddr1X }
                    ,  CUST_ZIP2	    =   #{item.custZip2 }
                    ,  CUST_ADDR2       =   #{item.custAddr2 }
                    ,  CUST_ADDR2X      =   #{item.custAddr2X }
                    ,  MANAGER_NM       =   #{item.managerNm }
                    ,  MOBILE	        =   #{item.mobile }
                    ,  TEL		        =   #{item.tel }
                    ,  FAX		        =   #{item.fax }
                    ,  YUL_WT	        =   #{item.yulWt }
                    ,  YUL_HM	        =   #{item.yulHm }
                    ,  YUL_MJ	        =   #{item.yulMj }
                    ,  YUL_NP	        =   #{item.yulNp }
                    ,  YUL_TB	        =   #{item.yulTb }
                    ,  YUL_HD	        =   #{item.yulHd }
                    ,  YUL_HS	        =   #{item.yulHs }
                    ,  YUL_SG	        =   #{item.yulSg }
                    ,  YUL_GT	        =   #{item.yulGt }
                    ,  LIMIT_AMT	    =   #{item.limitAmt }
                    ,  MAKE_DATE	    =   #{item.makeDate }
                    ,  BILL_YN	        =   #{item.billYn }
                    ,  BILL_EMAIL       =   #{item.billEmail }
                    ,  USE_YN	        =   #{item.useYn }
                    ,  USE_EXPLAIN      =   #{item.useExplain }
                    ,  REMARKS	        =   #{item.remarks }
                    ,  REMARKS2	        =   #{item.remarks2 }
                    ,  UPDATE_DATE	    =   now()
                    ,  UPDATE_ID	    =   #{userId}

            WHERE CUST_CD       =   #{item.oldCustCd}
        </foreach>
    </update>

    <delete id="mst2020_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MCUSTTB
            WHERE CUST_CD     	=   #{item.custCd }
        </foreach>
    </delete>

    <!-- ###  지점정보 불러오기 list    ################################ -->
    <select id="mst2030_list" resultType="java.util.HashMap">
        SELECT
               a.CUST_CD        as  custCd
             , a.CUST_CD        as  oldCustCd
             , a.CUSTS_CD       as  custsCd
             , a.CUSTS_NM       as  custsNm
             , a.USE_YN         as  useYn
             , a.EXPLAINS       as  explains
             , a.REG_DATE       as  regDate
             , a.REG_ID         as  regId
             , a.UPDATE_DATE    as  updateDate
             , a.UPDATE_ID      as  updateId
             , 'U'              as  iuD
        FROM MCUSTSTB as a
        WHERE a.CUSTS_CD = "00000000"
    </select>

    <select id="mst2030_select" resultType="java.util.HashMap">
        SELECT
               a.CUST_CD        as  custCd
             , a.CUSTS_CD       as  custsCd
             , a.CUSTS_CD       as  oldCustsCd
             , a.CUSTS_NM       as  custsNm
             , a.USE_YN         as  useYn
             , a.EXPLAINS       as  explains
             , a.REG_DATE       as  regDate
             , a.REG_ID         as  regId
             , a.UPDATE_DATE    as  updateDate
             , a.UPDATE_ID      as  updateId
             , 'R'              as  iuD
        FROM MCUSTSTB as a
        WHERE a.CUST_CD   =   #{paramCustCd }
          AND a.CUSTS_CD  !=  "00000000"

    </select>

    <insert id="mst2030_group_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MCUSTSTB
                (
                      CUST_CD
                    , CUSTS_CD
                    , CUSTS_NM
                    , USE_YN
                    , EXPLAINS
                    , REG_DATE
                    , REG_ID
                    , UPDATE_DATE
                    , UPDATE_ID
                ) VALUES (
                      #{item.custCd }
                    , '00000000'
                    , #{item.custsNm }
                    , 'Y'
                    , #{item.explains }
                    , now()
                    , #{userId }
                    , now()
                    , #{userId }
                )
        </foreach>
    </insert>

    <update id="mst2030_group_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCUSTSTB
                SET
                      CUST_CD           =   #{item.custCd }
                    , CUSTS_CD          =   #{item.custsCd }
                    , CUSTS_NM          =   #{item.custsNm }
                    , USE_YN            =   'Y'
                    , EXPLAINS          =   #{item.explains }
                    , UPDATE_DATE       =   now()
                    , UPDATE_ID         =   #{userId}

            WHERE CUST_CD               = #{item.oldCustCd }
              AND CUSTS_CD              = '00000000'
        </foreach>
    </update>

    <update id="mst2030_group_all_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCUSTSTB
                SET
                      CUST_CD           =   #{item.custCd }
                    , UPDATE_DATE       =   now()
                    , UPDATE_ID         =   #{userId}

            WHERE CUST_CD               = #{item.oldCustCd }
        </foreach>
    </update>

    <delete id="mst2030_group_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MCUSTSTB
             WHERE CUST_CD     	=   #{item.custCd }
        </foreach>
    </delete>

    <insert id="mst2030_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MCUSTSTB
                (
                      CUST_CD
                    , CUSTS_CD
                    , CUSTS_NM
                    , USE_YN
                    , EXPLAINS
                    , REG_DATE
                    , REG_ID
                    , UPDATE_DATE
                    , UPDATE_ID
                ) VALUES (
                      #{item.custCd }
                    , #{item.custsCd }
                    , #{item.custsNm }
                    , 'Y'
                    , #{item.explains }
                    , now()
                    , #{userId }
                    , now()
                    , #{userId }
                )
        </foreach>
    </insert>

    <update id="mst2030_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCUSTSTB
                SET
                      CUSTS_CD          =   #{item.custsCd }
                    , CUSTS_NM          =   #{item.custsNm }
                    , USE_YN            =    #{item.useYn }
                    , EXPLAINS          =   #{item.explains }
                    , UPDATE_DATE       =   now()
                    , UPDATE_ID         =   #{userId}

            WHERE CUST_CD               = #{item.custCd }
              AND CUSTS_CD              =  #{item.oldCustsCd }
        </foreach>
    </update>

    <delete id="mst2030_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MCUSTSTB
             WHERE CUST_CD     	=   #{item.custCd }
               AND CUSTS_CD     =  #{item.custsCd }
        </foreach>
    </delete>


    <!--    공통코드 list -->
    <select id="mst5090_list" resultType="java.util.HashMap">
        SELECT
                  LEFT(a.COMM_CD,3)     as  commCd1
                , LEFT(a.COMM_CD,3)     as  oldCommCd1
                , a.COMM_NM             as  commNm
                , count(*) - 1   	    as  cnt
                , a.COMM_ETC            as  commEtc
                , a.EXPLAINS            as  explains
                , a.USE_YN              as  useYn
                , a.REG_DATE            as  regDate
                , a.REG_ID              as  regId
                , a.UPDATE_DATE         as  updateDate
                , a.UPDATE_ID           as  updateId
                , 'U'                   as  iuD
        FROM MCOMMTB a
        GROUP BY LEFT(COMM_CD, 3)
    </select>

    <!--    공통코드 선택자료 list -->
    <select id="mst5090_select" resultType="java.util.HashMap">
        SELECT
            SUBSTRING(a.COMM_CD,4,4)     as  commCd2
             , SUBSTRING(a.COMM_CD,4,4)     as  oldCommCd2
             , a.COMM_NM            as  commNm
             , a.COMM_ETC           as  commEtc
             , a.EXPLAINS           as  explains
             , a.USE_YN             as  useYn
             , a.REG_DATE           as  regDate
             , a.REG_ID             as  regId
             , a.UPDATE_DATE        as  updateDate
             , a.UPDATE_ID          as  updateId
             , 'U'                  as  iuD
        FROM MCOMMTB a
        where LEFT(a.COMM_CD,3) = #{ paramCommCd1 }
          AND SUBSTRING(a.COMM_CD, 4,4) != '0000'
    </select>

    <!--    공통코드 그룹 신규등록  -->
    <insert id="mst5090_group_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MCOMMTB
            (
            COMM_CD
            , COMM_NM
            , COMM_ETC
            , EXPLAINS
            , USE_YN
            , REG_DATE
            , REG_ID
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
            CONCAT(#{item.commCd1}, '0000')
            , #{item.commNm}
            , #{item.commEtc}
            , #{item.explains}
            , #{item.useYn}
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    공통코드 그룹 수정 -->
    <update id="mst5090_group_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCOMMTB
            SET
                COMM_CD         =   CONCAT(#{item.commCd1}, '0000')
            ,   COMM_NM         =   #{item.commNm}
            ,   COMM_ETC        =   #{item.commEtc}
            ,   EXPLAINS        =   #{item.explains}
            ,   USE_YN          =   #{item.useYn}
            ,   UPDATE_DATE     =   NOW()
            ,   UPDATE_ID       =   #{userId}

            WHERE COMM_CD   =   CONCAT(#{item.oldCommCd1}, '0000')
        </foreach>
    </update>

    <!--    공통코드 그룹항목 전체 수정 -->
    <update id="mst5090_group_all_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCOMMTB
            SET
            COMM_CD = CONCAT(#{item.commCd1}, SUBSTRING(COMM_CD,4,4))
            ,   UPDATE_DATE     =   NOW()
            ,   UPDATE_ID       =   #{userId}

            WHERE LEFT(COMM_CD,3)   =   #{item.oldCommCd1}
            AND SUBSTRING(COMM_CD, 4,4) != '0000'
        </foreach>
    </update>

    <!--    공통코드 그룹 삭제 -->
    <delete id="mst5090_group_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MCOMMTB
            WHERE LEFT(COMM_CD,3)  	=   #{item.oldCommCd1 }
        </foreach>
    </delete>

    <!--    공통코드 신규등록  -->
    <insert id="mst5090_insert" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            INSERT INTO MCOMMTB
            (
            COMM_CD
            , COMM_NM
            , COMM_ETC
            , EXPLAINS
            , USE_YN
            , REG_DATE
            , REG_ID
            , UPDATE_DATE
            , UPDATE_ID
            ) VALUES (
            CONCAT(#{item.commCd1}, #{item.commCd2 } )
            , #{item.commNm}
            , #{item.commEtc}
            , #{item.explains}
            , #{item.useYn}
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            )
        </foreach>
    </insert>

    <!--    공통코드 수정 -->
    <update id="mst5090_update" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            UPDATE MCOMMTB
            SET
                COMM_CD         =   CONCAT(#{item.commCd1}, #{item.commCd2})
            ,   COMM_NM         =   #{item.commNm}
            ,   COMM_ETC        =   #{item.commEtc}
            ,   EXPLAINS        =   #{item.explains}
            ,   USE_YN          =   #{item.useYn}
            ,   UPDATE_DATE     =   NOW()
            ,   UPDATE_ID       =   #{userId}

            WHERE COMM_CD   =   CONCAT(#{item.oldCommCd1}, #{item.oldCommCd2})
        </foreach>
    </update>

    <!--    공통코드 그룹 삭제 -->
    <delete id="mst5090_delete" parameterType="java.util.Map">
        <foreach collection="list1" item="item" separator=";">
            DELETE FROM MCOMMTB
            WHERE COMM_CD  	=   CONCAT(#{item.oldCommCd1 }, #{item.oldCommCd2})
        </foreach>
    </delete>


</mapper>